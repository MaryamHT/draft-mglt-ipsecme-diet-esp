<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.34 (Ruby 3.0.2) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

<!ENTITY RFC2119 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC8174 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml">
<!ENTITY RFC4301 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4301.xml">
<!ENTITY RFC4303 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4303.xml">
<!ENTITY RFC8724 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8724.xml">
<!ENTITY RFC8750 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8750.xml">
<!ENTITY RFC7296 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.7296.xml">
<!ENTITY I-D.mglt-ipsecme-ts-dscp SYSTEM "https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.mglt-ipsecme-ts-dscp.xml">
<!ENTITY I-D.mglt-ipsecme-ts-dsc SYSTEM "https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.mglt-ipsecme-ts-dsc.xml">
<!ENTITY I-D.mglt-ipsecme-diet-esp-context-ikev2-extension SYSTEM "https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.mglt-ipsecme-diet-esp-context-ikev2-extension.xml">
<!ENTITY RFC4309 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4309.xml">
]>


<rfc ipr="trust200902" docName="draft-mglt-ipsecme-diet-esp-09" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="EHCP">ESP Header Compression Profile</title>

    <author initials="D." surname="Migault" fullname="Daniel Migault">
      <organization>Ericsson</organization>
      <address>
        <email>daniel.migault@ericsson.com</email>
      </address>
    </author>
    <author initials="T." surname="Guggemos" fullname="Tobias Guggemos">
      <organization>LMU</organization>
      <address>
        <email>guggemos@nm.ifi.lmu.de</email>
      </address>
    </author>
    <author initials="C." surname="Bormann" fullname="Carsten. Bormann">
      <organization>Universitaet Bremen TZI</organization>
      <address>
        <email>cabo@tzi.org</email>
      </address>
    </author>
    <author initials="D." surname="Schinazi" fullname="David Schinazi">
      <organization>Google LLC</organization>
      <address>
        <email>dschinazi.ietf@gmail.com</email>
      </address>
    </author>

    <date year="2023" month="June" day="21"/>

    <area>Security</area>
    <workgroup>IPsecme</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<?line 41?>

<t>ESP Header Compression Profile (EHCP) defines a profile to compress communications protected with IPsec/ESP.</t>



    </abstract>



  </front>

  <middle>


<?line 45?>

<section anchor="requirements-notation"><name>Requirements notation</name>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
"MAY", and "OPTIONAL" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.
<?line -6?></t>

</section>
<section anchor="introduction"><name>Introduction</name>

<t>This document defines a profile to compress IPsec/ESP <xref target="RFC4301"/> / <xref target="RFC4303"/> traffic represented by <xref target="fig-esp"/>.</t>

<figure title="Top-Level Format of an ESP Packet" anchor="fig-esp"><artwork align="center"><![CDATA[
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ ----
|               Security Parameters Index (SPI)                 | ^Int.
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ |Cov-
|                      Sequence Number                          | |ered
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | ----
|                    Payload Data* (variable)                   | |   ^
~                                                               ~ |   |
|                                                               | |Conf.
+               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ |Cov-
|               |     Padding (0-255 bytes)                     | |ered*
+-+-+-+-+-+-+-+-+               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ |   |
|                               |  Pad Length   | Next Header   | v   v
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ ------
|         Integrity Check Value-ICV   (variable)                |
~                                                               ~
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t>The main  principle is to avoid sending information that has already been shared by the peers. 
As depicted in <xref target="fig-arch"/>, this profiles defines two levels of compression.
The first level is the Clear Text ESP Compression (CTE C)  compresses all fields that will later be encrypted by ESP - that is the Payload Data, the Padding, the  Pad Length and the Next Header. 
The second is the Encrypted ESP Compression (EE C) compresses ESP remaining fields that is the Security Parameters Index (SPI) and  Sequence Number (SN).</t>

<t>The decompression of the inbound packet follows the reverse path the Encrypted ESP Decompression (EE D) decompressed the unencrypted ESP header fields while the Clear Text ESP Decompression (CT D) is performed once the ESP packet is decrypted.</t>

<t>Note that implementation MAY differ from the architectural description but it is assumed the outputs will be the same.</t>

<t>The CTE C/D and EE C/D are expressed via the Generic Framework for Static Context Header (SCHC) <xref target="RFC8724"/>.
The SCHC rules are derived from the ESP Compression Header Context which includes the Security Association (SA) as well as an additional parameters.
This is the main content of this document.</t>

<t>It is expected that all necessary arguments are agreed via IKEv2 <xref target="I-D.mglt-ipsecme-diet-esp-context-ikev2-extension"/>.</t>

<t>In some case, additional compression may occur on the inner IP packet before being processed by IPsec/ESP as well as over the Outer IP packet.
Such compression, decompression are outside the scope of this document.</t>

<figure title="ESP Compression Architecture" anchor="fig-arch"><artwork align="center"><![CDATA[
              +--------------------------------+ 
              | ESP Header Compression Context |
              |   - Security Association       |
              |   - Additional Parameters      |
              +--------------------------------+    
                               |        
                               |
+-----------------+            |             +------------------+  
| Inner IP Packet |            |             | Inner IP Packet  | 
+-----------------+            |             +------------------+ 
| Clear Text ESP  |            v             | Clear Text ESP   |
+-----------------+<-- Clear Text ESP C/D -->+------------------+
| Encrypted ESP   |            v             | Encrypted ESP    |
+-----------------+<-- Encrypted ESP C/D  -->+------------------+
| Outer IP Packet |                          | Outer IP Packet  |
+-----------------+                          +------------------+

]]></artwork></figure>

</section>
<section anchor="esp-header-compression-context"><name>ESP Header Compression Context</name>

<t>The EHC Context provides the necessary information to generate the SCHC Rules.
Most pieces of information are already available from the negotiated SA <xref target="RFC4301"/>.
Other pieces of information needs to be specifically configured or agreed via other mechanisms like for example <xref target="I-D.mglt-ipsecme-diet-esp-context-ikev2-extension"/>.<br />
The reference column of <xref target="tab-ehc-ctx-esp"/> indicates how the information is defined.</t>

<t>The Compression / Decompression (C / D) column specifies in which of the compression the parameter is being used.</t>

<t>Note that additional Compression might be performed especially on the inner IP packet - for example, including the TCP layer.
However, this profiles limits the scope of the compression to UDP packets as well as the inner IP header.
We believe that is a reasonable scope for ESP to address both IoT UDP packets as well as large VPN traffic.
If further compression are needed, this should be achieved by sending an IP packet with an SCHC payload where the expected compression is achieved outside ESP.</t>

<t>The following attributes are considered by this EHC Context.
Implementations may consider different expression of the parameters but their behavior is expected to remain compatible with this specification.</t>

<figure title="EHC ESP related parameter" anchor="tab-ehc-ctx-esp"><artwork align="center"><![CDATA[
+===================+==========================+===========+=======+
| EHC Context       | Possible Values          | Reference | C / D |
+===================+==========================+===========+=======+
| alignment         | "8 bit", "32 bit"        | ThisRFC   | CT E  |
| ipsec_mode        | "Tunnel", "Transport"    | RFC4301   | CT E  | 
| tunnel_ip         | IPv4, IPv6 address       | RFC4301   | CT E  |
| esp_spi           | ESP SPI                  | RFC4301   | EE    |
| esp_spi_lsb       | 0, 1, 2, 3, 4*           | ThisRFC   | EE    |
| esp_sn            | ESP Sequence Number      | RFC4301   | EE    |
| esp_sn_lsb        | 0, 1, 2, 3, 4*           | ThisRFC   | EE    |
| esp_encr          | ESP Encryption Algorithm | RFC4301   | CT E  |
| ts_flow_label     | True, False              | ThisRFC   | CT E  | 
| ts_ip_version     | 4, 6                     | ThisRFC   | CT E  |
| ts_ip_src_start   | IP4 or IPv6 address      | ThisRFC   | CT E  |
| ts_ip_src_end     | IP4 or IPv6 address      | ThisRFC   | CT E  |
| ts_ip_dst_start   | IPv4 or IPv6 address     | ThisRFC   | CT E  |
| ts_ip_dst_end     | IPv4 or IPv6 address     | ThisRFC   | CT E  |
| ts_proto_list     | TCP, UDP, ..., 0         | ThisRFC   | CT E  |
| ts_port_src_start | Port number              | ThisRFC   | CT E  |
| ts_port_src_end   | Port number              | ThisRFC   | CT E  |
| ts_port_dst_start | Port number              | ThisRFC   | CT E  |
| ts_port_dst_end   | Port number              | ThisRFC   | CT E  |
| ts_dsp_list       | DSCP number              | RFCYYYY   | CT E  |
+-------------------+--------------------------+-----------+-------+
]]></artwork></figure>

<dl>
  <dt>alignment:</dt>
  <dd>
    <t>indicates the byte alignement supported by the OS for the ESP extension. By default, the alignement is 32 bit for IPv6, but some systems may also support a 8 bit alignement. Note that when a block cipher such as AES-CCM is used, an 8 bit alignment is overwritten by the block size. 
ipsec_mode:</t>
  </dd>
  <dt/>
  <dd>
    <t>designates the IPsec mode defined in <xref target="RFC4301"/>. In this document, the possible values are "tunnel" for the Tunnel mode and "transport" for the Transport mode. 
tunnel_ip:</t>
  </dd>
  <dt/>
  <dd>
    <t>designates the IP address of the tunnel defined in <xref target="RFC4301"/>.
This field is only applicable when the Tunnel mode is used.
That IP address can be and IPv4 or IPv6 address. 
esp_spi:</t>
  </dd>
  <dt/>
  <dd>
    <t>designates the Security Policy Index defined in <xref target="RFC4301"/>. 
esp_spi_lsb:</t>
  </dd>
  <dt/>
  <dd>
    <t>designates the LSB to be considered for the compressed SPI. This parameter is defined by this specification and can take the following values 0, 1, 2, 4 respectively meaning that the compressed SPI will consist of the esp_spi_lsb LSB bytes of the original SPI.
A value esp_spi_lsb will let the SPI unchanged.
esp_sn:</t>
  </dd>
  <dt/>
  <dd>
    <t>designates the Sequence Number (SN) field defined in <xref target="RFC4301"/>.
esp_sn_lsb:</t>
  </dd>
  <dt/>
  <dd>
    <t>designates the LSB to be considered for the compressed SN and is defined by this specification. It works similarly to esp_spi_lsb. 
esp_encr:</t>
  </dd>
  <dt/>
  <dd>
    <t>designates the encryption algorithm used. For the purpose of compression is is RECOMMENDED to use <xref target="RFC8750"/>.</t>
  </dd>
</dl>

<t>ts_ * parameters are associated to the Traffic Selectors of the SA and introduces by this specification.
This specification limits the expression of the Traffic Selector to be of the form (IP source range, IP destination range, Port source range, Port destination range, Protocol ID list, DSCP list).
This limits the original flexibility of the expression of TS, but we believe that provides sufficient flexibility.</t>

<dl>
  <dt>ts_flow_label:</dt>
  <dd>
    <t>indicates the Flow Label field of the inner IPv6 or the Identification field of the IPv4 is copied from the outer IP address.
ts_ip_version:</t>
  </dd>
  <dt/>
  <dd>
    <t>designates the IP version of the Traffic Selectors and its values is set to 4 when only IPv4 IP addresses are considered and to 6 when only IPv6 addresses are considered.
Practically, when IKEv2 is used, it means that the agreed TSi or TSr results only in a mutually exclusive combination of TS_IPv4_ADDR_RANGE or TS_IPV6_ADDR_RANGE payloads.
When the traffic selectors result in a combination of IPv4 and IPv6 addresses, ts_ip_version is undefined. 
ts_ip_src_start:</t>
  </dd>
  <dt/>
  <dd>
    <t>designates the starting value range of source IP addresses of the inner packet and has the same meaning as the Starting Address field of the Traffic Selector payload defined in <xref section="3.13" sectionFormat="comma" target="RFC7296"/>.
Note however that in this specification, ts_ip_src_start applies for all agreed Traffic Selector payloads.
When the IP addresses cannot be expressed as a range, that exactly expressed as [ ts_ip_src_start, ts_ip_src_end ], ts_ip_src_start is undefined.<br />
ts_ip_src_end:</t>
  </dd>
  <dt/>
  <dd>
    <t>designates the high end value range of source IP addresses of the inner packet and has the same meaning as the Ending Address field of the Traffic Selector payload defined in <xref section="3.13" sectionFormat="comma" target="RFC7296"/>.
Similarly to ts_ip_src_end, when the IP addresses cannot be expressed as a range, ts_ip_src_end is undefined.<br />
ts_port_src_start:</t>
  </dd>
  <dt/>
  <dd>
    <t>designates the starting value of the port range of the inner packet and has the same meaning as the Start Port field of the Traffic Selector payload defined in <xref section="3.13" sectionFormat="comma" target="RFC7296"/>.
ts_port_src_end:</t>
  </dd>
  <dt/>
  <dd>
    <t>designates the starting value of the port range of the inner packet and has the same meaning as the End Port field of the Traffic Selector payload defined in <xref section="3.13" sectionFormat="comma" target="RFC7296"/>.
ts_proto_list:</t>
  </dd>
  <dt/>
  <dd>
    <t>designates the list of Protocol ID field whose meaning is defined in <xref section="3.13" sectionFormat="comma" target="RFC7296"/>. 
ts_dscp_list:</t>
  </dd>
  <dt/>
  <dd>
    <t>designates the list of DSCP values used by the Traffic Selector and have the same meaning as the List of DSCP Values defined in <xref target="I-D.mglt-ipsecme-ts-dscp"/>.</t>
  </dd>
</dl>

<t>Ports and IP addresses and ports are defined as range and compressed using the LSB.
For a range defined by a start and end value, let define msb( start, end ) the function that returns the MSB that remains unchanged while the value evolves between start and end.
Similarly, let define lsb( start, end ) the function that returns the LSB that change while the value evolves between start and end. 
Fnally, let's consider len( x ) the function that returns the number of bits of the bit array x.</t>

<t>We note for convenience:
* msb( ip_src ) = msb( ts_ip_src_start, ts_ip_src_end ) the MSB bits of the IP address range.
* msb( ip_dst ) = msb( ts_ip_dst_start, ts_ip_dst_end ) the MSB bits of the IP address range.
* lsb( ip_src ) = msb( ts_ip_src_start, ts_ip_src_end ) the LSB bits of the IP address range.
* lsb( ip_dst ) = msb( ts_ip_dst_start, ts_ip_dst_end ) the LSB bits of the IP address range.
* msb( port_src ) = msb( ts_port_src_start, ts_port_src_end ) the MSB bits of the source port range.
* msb( port_dst ) = msb( ts_port_dst_start, ts_port_dst_end ) the MSB bits of the destination port range.
* lsb( port_src ) = msb( ts_port_src_start, ts_port_src_end ) the LSB bits of the source port range.
* lsb( port_dst ) = msb( ts_port_dst_start, ts_port_dst_end ) the LSB bits of the destination port range.</t>

<t>Protocol IDs and DSP are defined as list of non consecutive values. 
A target value is defined when the list contains a single element.</t>

</section>
<section anchor="new-schc-compression-decompression-actions-cda"><name>New SCHC Compression / Decompression Actions (CDA)</name>

<t>In addition to the Compression / Decompression Action defined in <xref section="7.4" sectionFormat="comma" target="RFC8724"/>, this specification uses the CAD as presented in <xref target="tab-cda"/>.
These CDA are either refinement of the compute- * CDA or result in a combination CDA and are mostly used for convenience.</t>

<figure title="EHC ESP related parameter" anchor="tab-cda"><artwork align="center"><![CDATA[
+=================+=====================+=============================+
| Action          | Compression         | Decompression               |
+=================+=====================+=============================+
| lower           | elided              | Get from lower layer        |
| checksum        | elided              | Compute checksum            |
| padding         | elided              | Compute padding             |
+-----------------+---------------------+-----------------------------+
]]></artwork></figure>

<t>More specifically, when the list contains 0 or a single element, that value can be decompressed without ambiguity and as such an index does not need to be sent. 
When more than one value is present in the list, the index needs to be sent.</t>

<dl>
  <dt>lower:</dt>
  <dd>
    <t>designates an action where the compression consists in eliding the field.
The decompression consists in retrieving the field from the lower layers of the packet.
A typical example is when both IP and UDP carry the length of the payload, then the length of the UDP payload can be inferred from the one of the IP layer.
checksum:</t>
  </dd>
  <dt/>
  <dd>
    <t>designates an action where the compression consists in eliding a checksum field.
The decompression consists in re-computing the checksum.
ESP provides an integrity-check based on signature of the ESP payload (ICV).
This makes removing checksum possible, without harming the checksum mechanism.
padding:</t>
  </dd>
  <dt/>
  <dd>
    <t>designates an action where the compression consists in eliding the padding field.
The decompression consists in re-computing the padding field as described in ESP <xref target="RFC4303"/>.</t>
  </dd>
</dl>

</section>
<section anchor="clear-text-esp-compression-decompression"><name>Clear Text ESP Compression / Decompression</name>

<t>The Clear Text ESP Compression is performed on the ESP fields not yet encrypted, that is the ESP Payload Data, the ESP padding field, the Pad Length field as well as the Next Header field which indicates the type of the inner packet.</t>

<t>When ipsec_mode is set to "Transport", the Clear Text ESP packet that corresponds to an IPv4 packet will have the Payload Data set to the IPv4 Payload and the Next Header set to the Protocol ID - that is typically UDP, TCP or SCHC when the payload results from an SCHC compression.
The Clear Text ESP packet that corresponds to an IPv6 packet will have the Payload Data set may include some IPv6 extensions that precede the IP payload. In that case, the Next Header will have the value that corresponds to that first IPv6 extension being encrypted.</t>

<t>When ipsec_mode is set to "Tunnel", the Clear Text ESP packet has the Payload Data set to the IP packet with the Next Header field indicating whether this is an IPv4, an IPv6 or an SCHC packet..</t>

<t>SA are unidirectional and the Direction Indicator (DI) reflects that direction and is set to Up for outbound SA and Down for inbound SA. 
Fields that are not compressed have no Target Value (TV), their Matching Operator (MO) is set to ignore and Compression/Decompression Actions (CDA) to "value-sent".
Unless specified the Field Position (FP) is set to 1.</t>

<t>Note that for both the IP payload and the IP header, some fields are Compressed / Decompressed independently of the value of Traffic Selectors EHC Context, while some other fields require the Traffic Selectors to be expressed under a specific format.</t>

<section anchor="sec-payload"><name>Inner Packet Payload Compression</name>

<t>An SCHC payload is not compressed.</t>

<t>If the inner IP payload is an UDP or TCP packet the checksum is elided. 
For both TCP or UDP, FL is set to 16 bit, TV is not set, MO is set to "ignore" and CDA is et to "checksum". 
This may result is decompressing a zero-checksum UDP packet with a valid checksum, but this has no impact as valid checksum are universally accepted.</t>

<t>If the inner packet is an UDP or UDP-Lite the length field is elided.
FL is set to 16, TV is not set, MO is set to "ignore" and CDA is set to "lower" as the length field of the decompressed UDP packet is expressed in bytes and is  derived from the length of the compressed UDP packet by adding the 16 bit UDP Checksum, the 16 bit UDP Length field as well as the respective length of the respective source MSB port and destination MSB ports.</t>

<figure><artwork><![CDATA[
UDP.Length = ( len( compressed UDP) + 16 + 16 + len( lsb( port_src ) ) + len( lsb( port_src ) ) ) / 8
]]></artwork></figure>

<t>Note that for each SA, LSB and MSB are of fixed length.
When the port has a single value this is equivalent to TV containing the port value, MO is set to "equal" and CDA set to not_sent.</t>

</section>
<section anchor="sec-inner-ip4"><name>Inner IPv4 Compression</name>

<t>When ts_ip_src/dst range is defined and ts_ipversion is set to "IPv4", IPv4 addresses of the inner IP packet are compressed. 
FL is set to 32, TV to msb(ip_src) or msb(ip_dst), the MO is set  to "MSB" and the CDA is set to "LSB".</t>

<t>The IPv4 Header checksum is elided. 
FL is set to 16, TV is omitted, MO is set to "ignore" and CDA is set to "checksum".</t>

<t>The Protocol field sets FL to 8 bits. 
If ts_proto_list contains the value 0, TV is not set, MO is set to ignore and  CDA is set to "value-sent". 
If "proto_id" does not contain 0 and the list contains less or exactly 1 value, TV is set to that value, MO is set to "equal" and CDA is set to "mot-sent". 
In any other case, TV is set to the proto_list, MO is set to "match-mapping" and  CDA is set to "mapping-sent".</t>

<t>The IPv4 TTL field is derived from the IPv4 TTL field of the outer IPv4 address or the IPv6 Hop limit.
FL is set to 8 bits, TV is omitted, MO is set to ignore and CDA is set to lower.</t>

<t>The IPv4 Total Length is elided. 
FL is set to 16 bits, TV is not set, MO is set to "ignore" and CDA is set to "lower".</t>

<t>DSP, ECN are either retrieved from the SA or from the outer IP header. 
Fl is set to 8.
When the DSP, ECN are defined by the SA via <xref target="I-D.mglt-ipsecme-ts-dsc"/> and ts_dsp_list contains a single element, TV is set to that element MO is set to "equal" and CDA is set to "not-sent".
When the DSP, ECN are defined by the SA via <xref target="I-D.mglt-ipsecme-ts-dsc"/> and ts_dsp_list contains more than one element, TV is set to the list, MO is set to "match-mapping" and CDA is set to "mapping-sent". 
When the DSP, ECN are not defined by the SA, MO is set to "ignore" and the CDA is set to "lower".</t>

<t>When ts_ip_version can be inferred from the ts, the IP version is elided.
FL is set to 4 bits, the TV is set to ts_ip_version, MO is set to "equal" and CDA to "not-sent".</t>

<t>When the inner IP address has the same version as the outer_ip and ts_traffic_flow is defined and set to True, the Identification field of the IPv4 is elided and read from the outer IP address field. 
FL is set to 16 bits, TV is ignored, MO is set to "ignore" and CDA is set to "lower".
When the inner is IPv4 and the outer IP is IPv6 and ts_traffic_flow is set to True, the LSB 16 bits of the outer IP address are considered. This results in a lossless compression. 
When the inner is IPv6 and the outer IP is IPv4 and ts_traffic_flow is set to True, the LSB 16 bits of inner Traffic Flow fields are set to the outer Identification field and the remaining 4 MSB bytes are set to 0.
Such compression is not lossless and needs to be considered cautiously.</t>

</section>
<section anchor="sec-inner-ip6"><name>Inner IPv6 Compression</name>

<t>The compression / decompression of the IPv6 fields are compressed / decompressed in a similar way as in IPv4  (see <xref target="sec-inner-ip4"/>).
IPv6 addresses are compressed decompressed as IPv4 addresses except that FL is set to 128. 
IPv6 Hop limit is compressed / decompressed as the IPv4 TTL field. 
The last Next Header with a transport protocol value is compressed / decompressed as IPv4 Protocol field.
The Total Length is compressed / decompressed similarly to the IPv4 Length except that the IPv6 length includes the IPv6 header. 
Traffic Class is compressed / decompressed similarly to the DSP,ECN field.
IP version is compressed / decompressed as in IPv4.
The Traffic Flow field is compressed / decompressed similarly to the IPv4 Identification field except that FL is set to 20 bits.</t>

</section>
<section anchor="esp-compression"><name>ESP Compression</name>

<t>When ipsec_mode is set to "Tunnel" and ts_ip_version can be determined, the Next Header Field is elided. 
FL is set to 8 bits, TV is set to IPv4 or IPv6 depending on the ts_ip_version, MO is set to "equal" and CDA is set to "not-sent".</t>

<t>If the esp_encr does not require a specific block size, Padding and Pad Length are elided.
FL is defined by the type that is to (Pad Length + 1 ) * 8 bits, TV is unset, MO is set to "ignore" and CDA is set to padding.</t>

<t>Encryption may require require the clear text to respect a given size block.
In addition, IP networking may also require a special alignment which is 32 bits by default for IPv6 Extensions, but may also be overwritten by the EHC Context.
The Padding is defined by pad_value and pad_size appended to the clear text payload - similarly to what ESP does with Padding and Pad Len. 
An 8 bit alignment is interpreted by SCHC as a Word of 8 bits, and a 32 bit alignment is interpreted as a Word of 32 bits. 
The padding size pad_size is defined by the alignment and set to 3 bits for an 8 bit alignment (2<strong>3) and 5 bits for 32 bit alignement (2</strong>5).
If pad designates the number of bits to be padded, the pad value is set to pad_value = ( pad + len( pad_size ) % Word.
This results in an additional pad_value + pad_size bits.</t>

</section>
</section>
<section anchor="encrypted-esp-compression"><name>Encrypted ESP Compression</name>

<t>SPI is compressed to its LSB.
FL is set to 32 bits, TV is not set, MO is set to "MSB( 4 - esp_spi_lsb)" and CDA is set to "LSB".</t>

<t>If the esp_encr considers implicit IV <xref target="RFC8750"/>, Sequence Number are not compressed. 
Otherwise, SN are compressed to their LSB similarly to the SPI. 
FL is set to 32 bits, TV is not set, MO is set to "MSB( 4 - esp_spi_lsb)" and CDA is set to "LSB".</t>

<t>Note that the use of implicit IV always result in a better compression as an 64 bit IV to be sent while compression of the SN alone results at best in a reduction of 32 bits.</t>

<t>The IPv6 Next Header field or the IPv4 Protocol that contains the "ESP" value is changed to "SCHC".</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

</section>
<section anchor="security-considerations"><name>Security Considerations</name>

</section>
<section anchor="acknowledgements"><name>Acknowledgements</name>

</section>


  </middle>

  <back>


    <references title='Normative References'>

&RFC2119;
&RFC8174;
&RFC4301;
&RFC4303;
&RFC8724;
&RFC8750;
&RFC7296;
&I-D.mglt-ipsecme-ts-dscp;
&I-D.mglt-ipsecme-ts-dsc;


    </references>

    <references title='Informative References'>

&I-D.mglt-ipsecme-diet-esp-context-ikev2-extension;
&RFC4309;


    </references>


<?line 389?>

<section anchor="illustrative-example"><name>Illustrative Example</name>

<section anchor="sec-iot-udp"><name>Single UDP Session IoT VPN</name>

<t>This section considers a IoT IPv6 probe hosting a UDP application.
The probe is dedicated to a single application and establishes a single UDP session with a server, and sets a VPN to connect its secure domain - like a home gateway.
The home gateway will be responsible to decompress the compress packet and provides interoperability with standard application server.</t>

<t>The EHC Context is defined as mentioned below:</t>

<t><list style="symbols">
  <t>alignment is set to 8 bits</t>
  <t>ipsec_mode is set to "Tunnel"</t>
  <t>tunnel_ip_srct is set to the IPv6_m, the IPv6 address of the mote.</t>
  <t>tunnel_ip_dst is set to IPv6_gw, the IPv6 of the security gateway.</t>
  <t>esp_spi is agreed by the IKEv2.</t>
  <t>esp_spi_lsb is set to 0 as IPv6_m provides sufficient context to associate the right SA.</t>
  <t>esp_sn results from the standard IPsec, and not impacted.</t>
  <t>esp_sn_lsb is set to 2 even though we are considering  AES-CCM_8_IIV <xref target="RFC8750"/> which uses the ESP Sequence Number to generated the IV.
This results in a 8 bytes reduction compared to the AES-CCM_8 <xref target="RFC4309"/>.</t>
  <t>esp_encr is configured with AES-CCM_8_IIV <xref target="RFC8750"/>. This cipher suite does not require a block size and so no padding is required and does not support SN compression.</t>
  <t>ts_flow_label As the inner traffic and the encrypted traffic are very correlated, it makes sense to re-use the flow label and ts_flow_label is set to True.</t>
  <t>ts_ip_version is set to IPv6.</t>
  <t>ts_ip_src_start is set to IPv6_m. In this example, the SA is associated to messages sent by the mote to the application server (IPv6_server)</t>
  <t>ts_ip_src_end is set to IPv6_m</t>
  <t>ts_ip_dst_end the IPv6 address of the application server (IPv6_server).</t>
  <t>ts_ip_dst_end IPv6_server</t>
  <t>ts_proto_list [ UDP ], in the case of a very constraint mote, only UDP messages are considered.</t>
  <t>ts_port_src_start port_m. The mote and the application server are using dedicated ports.</t>
  <t>ts_port_src_end port_m. The mote and the application server are using dedicated ports. The use of a specific single port enables their elision.</t>
  <t>ts_port_dst_end port_server</t>
  <t>ts_port_dst_end port_server</t>
  <t>ts_dsp_list [ 0 ] the default standard value, we MAY assume that value has been negotiated via IKEv2 or that it as been set as the default value left to the lower layers.</t>
</list></t>

<t><xref target="fig-std-udp-tunnel"/> illustrates an UDP packet being protected by ESP in the tunnel mode using AES-CCM_8_IIV.
This packet is compressed as depicted in <xref target="fig-comp-udp-tunnel"/>.<br />
EHC reduces the packet size by 53 bytes.</t>

<figure title="Standard ESP packet for IoT UDP in Tunnel mode more with AES-CCM_8_IIV" anchor="fig-std-udp-tunnel"><artwork align="center"><![CDATA[
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
 -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+---
 E|               Security Parameters Index (SPI)                 |  ^
 S+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+  |
 P|                      Sequence Number (SN)                     |  |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+  |
 I|version| traffic class |               flow label              |^ |
 P+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+| |
 v|         payload length        |  next header  |   hop limit   || |
 6+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+| |
  |                                                               || a
  |                      inner source IP                          || u
  |                                                               |e t
  |                                                               |n h
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+c e
  |                                                               |r n
  |                    inner destination IP                       |y t
  |                                                               |p i
  |                                                               |t c
 -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+e a
 U|          source port          |           dest port           |d t
 D+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+| e
 P|             length            |            checksum           || d
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+| |
  |                                                               || |
  ~                        APPLICATION DATA                       ~| |
  |                                                               || |
 -|                                               +-+-+-+-+-+-+-+-+| |
 E|                                               |    Padding    || |
 S+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+| |
 P|     Padding (continue)        |  Pad Length   | Next Header   |v v
 -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+---
  |         Integrity Check Value-ICV   (variable)                |
  |                                                               |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<figure title="EHC ESP packet for IoT UDP in Tunnel mode more with AES-CCM_8_IIV" anchor="fig-comp-udp-tunnel"><artwork align="center"><![CDATA[
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+--
|      Sequence Number          |                               | ^
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               | aut
|                                                               | hen
~                        APPLICATION DATA                       ~ tic
|                          (encrypted)                          | ate
|               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-|
|               |                                               | V
+-+-+-+-+-+-+-+-+                                               |--
|         Integrity Check Value-ICV   (variable)                |
|               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|               |
+-+-+-+-+-+-+-+-+
]]></artwork></figure>

</section>
<section anchor="single-tcp-session-iot-vpn"><name>Single TCP session IoT VPN</name>

<t>This section is very similar to <xref target="sec-iot-udp"/> except that a TCP session is used instead.</t>

<t>The compression on the TCP payload is very limited, and in a case where the TCP end point is the same as the ESP end point additionnal compression could be performed.
Additional fields such as TCP options, urgent pointers, the SN and ACK Number could be compressed by a specific profile agreed at the TCP level as opposed to the ESP level.</t>

<t>The ESP encapsulated TCP packet described in <xref target="fig-std-tcp-tunnel"/> is compressed by EHCP using th esam eEHCP context as in <xref target="sec-iot-udp"/> and EHCP reduces that packet by 55 bytes, as depicted in <xref target="fig-comp-udp-tunnel"/>.</t>

<figure title="Standard ESP packet for IoT TCP in Tunnel mode more with AES-CCM_8_IIV" anchor="fig-std-tcp-tunnel"><artwork align="center"><![CDATA[
     0                   1                   2                   3
     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+---
   E|               Security Parameters Index (SPI)                 |  ^
   S+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+  |
   P|                      Sequence Number (SN)                     |  |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+  |
   I|version| traffic class |               flow label              |^ |
   P+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+| |
   v|         payload length        |  next header  |   hop limit   || |
   6+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+| |
    |                                                               || a
    |                      inner source IP                          || u
    |                                                               |e t
    |                                                               |n h
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+c e
    |                                                               |r n
    |                    inner destination IP                       |y t
    |                                                               |p i
    |                                                               |t c
   -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+e a
   T|          source port          |           dest port           |d t
   C+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+| e
   P|                      Sequence Number (SN)                     || d
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+| |
    |                     ACK Sequence Number                       || |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+| |
    |Off. | Rserv |      Flags      |         Window Size           || |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+| |
    |             Checksum          |      Urgent Pointer           || |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+| |
    |                                                               || |
    ~                        APPLICATION DATA                       ~| |
    |                                                               || |
    |                                               +-+-+-+-+-+-+-+-+| |
   E|                                               |    Padding    || |
   S+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+| |
   P|     Padding (continue)        |  Pad Length   | Next Header   |V V
   -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+---
    |         Integrity Check Value-ICV   (variable)                |
    |                                                               |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<figure title="EHC ESP packet for IoT TCP in Tunnel mode more with AES-CCM_8_IIV" anchor="fig-comp-tcp-tunnel"><artwork align="center"><![CDATA[
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+---
   |  Sequence Number (SN) (ESP)   |          Sequence Number      ~   ^
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- |
   ~       (SN) (TCP)              |                ACK            ~^ | 
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+| a
   ~      Sequence Number          |Off. | Rserv |      Flags      || u
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+e t
   |         Window Size           |      Urgent Pointer           |n h
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+c |
   |      Urgent Pointer           |                               |r |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               |y |
   |                                                               ~p |
   ~                        APPLICATION DATA                       |t | 
   |                                                               || |
   |               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+| |
   |               |                                               |v v
   +-+-+-+-+-+-+-+-+                                               |---
   |         Integrity Check Value-ICV   (variable)                |
   |               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |               |
   +-+-+-+-+-+-+-+-+
]]></artwork></figure>

</section>
<section anchor="traditional-vpn"><name>Traditional VPN</name>

<t>This section illustrates the case of an company VPN that allows web browsing. 
The VPN is typically set by a remote host that forwards all its traffic to the
security gateway.<br />
In this case, the SA does not specify the protocol (TCP and UDP packet can be sent), nor the ports. 
Regarding ports it could be possible to restrict the user to only use high range ports (0  - 2 ** 10) - especially if the VPN is only supporting web browsing - but we did not consider this in this example. 
The destination IP address is also expect to take any value, while the IPv6 source in the case of a road warrior scenarios us expected to take a single value.
We consider the VPN client is using an IPv4 or an IPv6 address. 
Regarding ESP, we considered the VPN client is using AES-GCM_16, though AES-GCM_IIV would be the RECOMMENDED transform.
The VPN client is also expected to have a reasonably low throughput which enables the SN to be coded over 16 bits as opposed to 32 bits. 
Similarly, the number of connection is expected to remain sufficiently low so that a 16 bit SPI remains sufficient.</t>

<t>The EHC Context is defined as mentioned below:</t>

<t><list style="symbols">
  <t>alignment is set to 8 bits</t>
  <t>ipsec_mode is set to "Tunnel"</t>
  <t>tunnel_ip_src is set to the IPv6_user, the IPv6 address of the mote.</t>
  <t>tunnel_ip_dst is set to IPv6_gw, the IPv6 of the security gateway.</t>
  <t>esp_spi: is agreed by the IKEv2.</t>
  <t>esp_spi_lsb: is set to 2 bytes.</t>
  <t>esp_sn: results from the standard IPsec, and not impacted.</t>
  <t>esp_sn_lsb: is set to 16 bits. Note that such compression is possible since AES-GCM_16 is used instead of AES-GCM_16_IIV. 
While this results in better performances for EHC, it is not an optimal choice as IIV transforms results always in better comprehensions.</t>
  <t>esp_encr: is configured with AES-GCM_16 <xref target="RFC8750"/>.</t>
  <t>ts_flow_label: is set to True, note as the outer IP address is IPv6, the compression is lossless.</t>
  <t>ts_ip_version: is set not set as the VPN user can use either an IPv4 or an IPv6 address.</t>
  <t>ts_ip_src_start: is set to IPv6_user or IPv4_user. Note that the version can be inferred by the Next Header, and the version can deterministically determine the IP in use.</t>
  <t>ts_ip_src_end: is set to IPv6_user or IPv4_user</t>
  <t>ts_ip_dst_end: IP destination is set to take any value, so the range is unspecified and the start/ end addresses are undefined.</t>
  <t>ts_ip_dst_end: undefined.</t>
  <t>ts_proto_list: undefined</t>
  <t>ts_port_src_start: undefined.</t>
  <t>ts_port_src_end: undefined.</t>
  <t>ts_port_dst_end: undefined</t>
  <t>ts_port_dst_end: undefined</t>
  <t>ts_dsp_list: [ 0 ] the default standard value, we MAY assume that value has been negotiated via IKEv2 or that it as been set as the default value left to the lower layers.</t>
</list></t>

<section anchor="ipv6-in-ipv6"><name>IPv6 in IPv6</name>

<t><xref target="fig-std-vpn-tunnel"/> represents the original ESP TCP packet with IPv6 inner IP addresses and <xref target="fig-comp-vpn-tunnel"/> represents the corresponding packet compressed with EHC.</t>

<t>The compression with Diet-ESP results in a reduction of 32 bytes.</t>

<figure title="Standard ESP packet for VPN traffic mode with AES-GCM_16" anchor="fig-std-vpn-tunnel"><artwork align="center"><![CDATA[
     0                   1                   2                   3
     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+---
   E|               Security Parameters Index (SPI)                 |  ^
   S+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+  |
   P|                      Sequence Number (SN)                     |  |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+  |
    |                                                               |  |
    |                             IV                                |  |
   -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- |
   I|version| traffic class |               flow label              |^ |
   P+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+| |
   v|         payload length        |  next header  |   hop limit   || |
   6+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+| |
    |                                                               || a
    |                      inner source IP                          || u
    |                                                               |e t
    |                                                               |n h
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+c e
    |                                                               |r n
    |                    inner destination IP                       |y t
    |                                                               |p i
    |                                                               |t c
   -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+e a
   T|          source port          |           dest port           |d t
   C+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+| e
   P|                      Sequence Number (SN)                     || d
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+| |
    |                     ACK Sequence Number                       || |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+| |
    |Off. | Rserv |      Flags      |         Window Size           || |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+| |
    |             Checksum          |      Urgent Pointer           || |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+| |
    |                                                               || |
    ~                        APPLICATION DATA                       ~| |
    |                                                               || |
   -|                                               +-+-+-+-+-+-+-+-+| |
   E|                                               |    Padding    || |
   S+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+| |
   P|     Padding (continue)        |  Pad Length   | Next Header   |V V
   -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+---
    |                                                               |
    |         Integrity Check Value-ICV   (variable)                |
    |                                                               |
    |                                                               |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<figure title="Standard ESP packet for VPN traffic mode with AES-GCM_16" anchor="fig-comp-vpn-tunnel"><artwork align="center"><![CDATA[
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+---
   |             SPI               |              SN               |  ^
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+  |
   |                                                               |  |
   |                             IV                                |  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+--|
   |  Next Header  |                                               |^ |
   +-+-+-+-+-+-+-+-+                                               || |
   |                                                               || |
   |                    inner destination IP                       || |
   |                                                               || |a
   |               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+| |u
   |               |          source port          |  destination  ~|e|t
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+|n|h
   ~ port          |     TCP Sequence Number (SN)                  ~|c|e
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+|r|n
   ~  (continue)   |    ACK Sequence Number (SN)                   ~|y|t
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+|p|i
   ~  (continue)   |Off. | Rserv |      Flags      |    Window     ~|t|c
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+|e|a
   ~   Size        |   Urgent   Pointer            |               ~|d|t
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+| |e
   |                                                               || |d
   ~                        APPLICATION DATA                       ~| |
   |                                                               || |
   |                             +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ || |
   |                             |  Next Header    | Integrity     ~v v
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+               +---
   |                                                               |
   |         Integrity Check Value-ICV   (variable)                |
   |                                               +-+-+-+-+-+-+-+-+
   |                                               |                              
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

</section>
<section anchor="ipv6-in-ipv4"><name>IPv6 in IPv4</name>

<t>For IPv6 in IPv4, the compression is similar when ts_traffic_flow is set, otherwise these 20 bits needs to be provided explicitly.</t>

</section>
<section anchor="ipv4-in-ipv4"><name>IPv4 in IPv4</name>

<t>TBD
   Figure 9 represents the original TCP packet with IPv4 inner IP
   addresses and Figure 10 represents the corresponding packet
   compressed with Diet-ESP.  The compression with Diet-ESP results in a
   reduction of 24 bytes.</t>

<figure><artwork><![CDATA[
       0                   1                   2                   3
       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+---
   E|               Security Parameters Index (SPI)                 |  ^
   S+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+  |
   P|                      Sequence Number (SN)                     |  |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+  |
    |                                                               |  |
    |                             IV                                |  |
   -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- |
   I|Version|  IHL  |Type of Service|          Total Length         |^ |
   P+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+| |
   v|         Identification        |Flags|      Fragment Offset    || a
   4+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+| u
    |  Time to Live |    Protocol   |         Header Checksum       |e t
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+n h
    |                       Source Address                          |c e
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+r n
    |                    Destination Address                        |y t
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+p i
    |                    Options                    |    Padding    |t c
   -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+e a
   T|          source port          |           dest port           |d t
   C+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+| e
   P|                      Sequence Number (SN)                     || d
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+| |
    |                     ACK Sequence Number                       || |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+| |
    |Off. | Rserv |      Flags      |         Window Size           || |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+| |
    |             Checksum          |      Urgent Pointer           || |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+| |
    |                                                               || |
    ~                        APPLICATION DATA                       ~| |
    |                                                               || |
   -|                                               +-+-+-+-+-+-+-+-+| |
   E|                                               |    Padding    || |
   S+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+| |
   P|     Padding (continue)        |  Pad Length   | Next Header   |V V
   -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+---
    |                                                               |
    |                                                               |
    |         Integrity Check Value-ICV   (variable)                |
    |                                                               |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<figure><artwork><![CDATA[
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+---
   |             SPI               |              SN               |  ^
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+  |
   |                                                               |  |
   |                             IV                                |  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+--|
   |Type of Service|    Protocol   |     inner destination IP      ~^ |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-|| |
   ~  (continue)                   |            source port        || |a
   |-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+| |u
   |        destination port       |     TCP Sequence Number (SN)  ~|e|t
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+|n|h
   ~  (continue)                   |     ACK Sequence Number       ~|c|e
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+|r|n
   ~  (continue)                   |Off. | Rserv |      Flags      ||y|t
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+|p|i
   |          Window Size          |        Urgent Pointer          |t|c
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+|e|a
   |                                                               ||d|t
   |                        APPLICATION DATA                       || |e
   ~                                                               || |d
   |                                               +-+-+-+-+-+-+-+-+| |
   |                                               |    Padding    |v v
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+---
   |                                                               |
   |                                                               |
   |         Integrity Check Value-ICV   (variable)                |
   |                                                               |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>
<figure><artwork><![CDATA[
             Figure 10: Diet-ESP VPN Packet Description
]]></artwork></figure>

</section>
<section anchor="ipv4-in-ipv6"><name>IPv4 in IPv6</name>

<t>TBD</t>

</section>
</section>
</section>


  </back>

<!-- ##markdown-source:
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
TSWb7P9POSHPOa6r8/C51SeM/bYGJiuBRIuqjzPfpjq75fiwdYUdsE18KzZb
1i/TbhYLNrAMa4K56xi1nPJ2d6n3ZvWZcyuB9HS4233p8aiFHi29C8RFsB5d
s6r8/qLCiYZgoUzpR0Ma4Q/4Si4gk2pU5SaxSAImH7wcj8gDmsi2RklWVjqa
jFpToSSHgmt8bPEPNUqLFt5KVzKeyDFVV+riS+xDSTJbmEpJh1HtCq4fMPHW
8Iyl2JxsYMthsQi8Ds5KRpbZ6ZcKjCiXoRyoRXGJ/kFqAJaKAxuKg1b3D/7N
iC/bhOOn4E2QjH/JnKMq3n6JINIJFHRIHZ7dNMcNP60nGjtH9+oACnU3jubl
gncfcCqnvArj2ltTxa63pgzwwwN87YZOSgNplaZrJnTAyUQhS9DxY/hY7VvB
GlBbhGOOpRys66tx1Rx+7u+D6cMLo/qzi3rzxKjefDGqP29Mb/4Y1ZtHRvXm
k1G9eWVUf36Z/jwz/flm+vPO9Oef6c9D05+Ppj8vTX9+mt48NX3ITC2cedaT
t0apgx7mne5JZorHpj+fTdfYoXmy3hnfVj71idOri4sRHmWBsS+D4fM0urSH
opjPr0k2AVk+xqDMZ8bJ6/VBw50m91+zzXfKNt8fitPdPzVOffnc+sSpJ79b
i/20Egf80/S89WE/LX376R7etze4UFZ92pn9eOB68sF9Hi9cvaS5hxcOV053
WlrbxUkPa5M+lia9ccyyQ3ltAdW2fU5o1SYodn7rCSVhGyPJGA8YqoBLG8yJ
qs75fPyNjgzrAyVjJX+8hQKE0ip1Z4zke2NkbOSVCpT/163MjIl8b4xiGbaV
LYbDFnzAQF6uh9EqQDc+Rp/8+TgPOLLxWVO3LivDkb3p1nv7NbsA3VnTcgyp
BYO7AnJEknzuo8N6cPy2QOng0Db379qKqsP9e2cdhc7fsyKyjs1Wj6+TseXl
AkoqbHbD6ebk7sXTpXBTnHN1XsA3rPaSkh98JnE3sitl/x3azrHi7Hm778w1
aOGSTtag6htx7LCf88FGS6Y01YBRIme9c9x438l2JbfqTb1lBlYuoKawW3cK
LaViEJM8twfwamG3pKEkw1/0JaBGmWq0AX5SOd5ic6Ial6tVRRLbsg/ylFOa
JGYS0qkavM0Mg9nawQPnn6iHD9XjnW2uMDEHFSec7SkEJBiSu0vbxTm0hvfk
WKFJMjEbmfAW8bz3jp/raoYmcCGYLFPMgMXyNj7SloiPx4jhgJtUQ7t/PaWn
ypK7kTNa0HG/UVHgGbklsDJMwxxDAd5puQzc2zGIjz52+sBUiNNEcvzZE232
ZOSCsPAwt3rEjnCvhmuvjrsLJE6Wn2Cy4P43koNuLmGS9rUZcnzfO1oLK5Ix
ZDCqub6G7ZCT+0wb4TlHOd9gOiUALbDF+cIUJjrppRhKMNXoWB2IhYe2it4P
CThFPc7xBX5xm1SImN0imocX19UBglyZm8iO7IqFhWbmgIX6aZPx+2co5Wir
5MAp+V9ezLF392qOPa9GgpNRwyezvV6rMtwmhdPcMzDLlm0UrCSEyRRrZzaF
IUAkV32XMnlpxwmWK34xhpTFSUwuymI5fwlYiwoMpG4Pt4CZV8kMY3rTPIkp
9oeT1s7NGqoU39XAuR9TqfMdebUbe13FG9K14Dy9oIxiL6hkGPApG+4mKIHw
5SNK3fIqoa7ZoKKjGMK2JFWMpg2URaSJUMWhFpJNim4Xn40air2Q/QkmF0nv
0g+XO7Dhrr1rhOUdF8fAZui775jq/aSUc9rqen6z5U1CPQrxxfOKVmKrWkok
9sLDAx0JEujAkoWK3TNukdX7iZrOEN2+psCzv9eGe3pUOx71E40qDedme2lF
29vuUU4dt5ttt9UpuLcbZQp7/33qFNAIBiuY2J63wXjmly9czbM6IF5o2fE+
OPIRjXEntk6iQUD6WyHJjpVOXPs2+PW2xmRxioXq7+6P8m/UlkhBNw8TXQ35
/AGnqq1R/NsoavgSUv//N6R+f5fDmpCO36wNqQcu+JIwcCecviQM3A7pS8LA
ejh9SRhYd959SRi4G05fEgbuMXbrf/7UCQN9Fep8SRhY+a+ZMPBpnwYL/Bny
Dv7E6Qv1AvET0xcoPCOmLvlMA89VUDak/kemLDgf9FgHo+f/HL9s3u8pY6Er
1njXz3I9QHdYYfVAbIuRJ4TuLFd/68LoroC6AtZ3/dwO6C5mdZ8YRb1F9Rer
wvpdtrHbadDueln1lESTLaeSRtFmj6OnbT1z+OMyXuqecCqWmUnt8BQx4dRm
CndY6B+XN73Rab5M2nFaxzYWs5hxqpZxTzjpZZ0B5Zrc2KYYvqrF9G3w38fl
pDc6KeGCPubdpJcEn49/jHCyn5U0WhdQKN7xSm3BUdc683tW4hDi3Kq/7/4J
+9VnltCqT6OTnwRlxfOfRu62HKQ/ztoM4y67ePG52W05MccetgRA7T73cj5G
y1EDAz41B3eIRQjwV3YY93b0l00QcV9y3pG13s+fcdt1cQMSn/14SP9/TjFg
MFW7AkItwaBdGwwiEH5ASAA+3lknBETvh2EgE+kZKbV+JIggedGgJ7tONMiN
B/UTEfoSE7pN+n2JCf1XxYTemJiQOv75BBo4k6OFx2A/JbF2cPZOiLA4fdaY
UHCUgmmT7Dlj2xXRJaVLgeFHx8I58ZfdHnCq4y9nyYwyHE9wW2X2gZl8Snds
xTwIXKB1/OXeONn4Sxc/jXnRsi8ZNd38ZOMv98bp9vjLobNaWoFVHX+5N063
x19e8b4FrTjgH9e/+SX+8iX+8iX+0tPYrf/5En/pwAH/fIm/3PnzuQInf4Yw
zr2pbI9B/hINsQ98iYZ8ErEFo7aVRMNi7o4hfOyMhtzxnxWPoa+4hQb1p8Uq
c2IP9yVSM/bgksBpdJXf//PEHtahU7cN9kfEHho4rawq7j/24PBLq6Fn73dZ
XZ8h9nB/+8bEHjohrVvIa2MPndbb2jiZ2ENvNte9Ta5P9vQ3/n0mT38/UP7I
eEE7lHsT2Hfl1h/reN6rPcTowj9l5/Uh7RJITgLfa7/rVkuQW7zt3/8Dz4Lk
2S3LAAA=

-->

</rfc>

